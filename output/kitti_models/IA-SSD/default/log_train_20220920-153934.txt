2022-09-20 15:39:34,322   INFO  **********************Start logging**********************
2022-09-20 15:39:34,322   INFO  CUDA_VISIBLE_DEVICES=ALL
2022-09-20 15:39:34,322   INFO  cfg_file         cfgs/kitti_models/IA-SSD.yaml
2022-09-20 15:39:34,322   INFO  batch_size       8
2022-09-20 15:39:34,322   INFO  epochs           80
2022-09-20 15:39:34,322   INFO  workers          4
2022-09-20 15:39:34,322   INFO  extra_tag        default
2022-09-20 15:39:34,322   INFO  ckpt             None
2022-09-20 15:39:34,322   INFO  pretrained_model None
2022-09-20 15:39:34,322   INFO  launcher         none
2022-09-20 15:39:34,322   INFO  tcp_port         18888
2022-09-20 15:39:34,322   INFO  sync_bn          False
2022-09-20 15:39:34,322   INFO  fix_random_seed  False
2022-09-20 15:39:34,322   INFO  ckpt_save_interval 1
2022-09-20 15:39:34,322   INFO  local_rank       0
2022-09-20 15:39:34,322   INFO  max_ckpt_save_num 5
2022-09-20 15:39:34,322   INFO  merge_all_iters_to_one_epoch False
2022-09-20 15:39:34,322   INFO  set_cfgs         None
2022-09-20 15:39:34,322   INFO  max_waiting_mins 0
2022-09-20 15:39:34,323   INFO  start_epoch      0
2022-09-20 15:39:34,323   INFO  num_epochs_to_eval 5
2022-09-20 15:39:34,323   INFO  save_to_file     False
2022-09-20 15:39:34,323   INFO  cfg.ROOT_DIR: /data/lixusheng_data/code/paper/OpenPCDet_20220718/Not_All_Point/IA-SSD
2022-09-20 15:39:34,323   INFO  cfg.LOCAL_RANK: 0
2022-09-20 15:39:34,323   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2022-09-20 15:39:34,323   INFO  
cfg.DATA_CONFIG = edict()
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2022-09-20 15:39:34,323   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2022-09-20 15:39:34,323   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2022-09-20 15:39:34,323   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': False, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:20', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2022-09-20 15:39:34,323   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'sample_points', 'NUM_POINTS': {'train': 16384, 'test': 16384}}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}]
2022-09-20 15:39:34,323   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2022-09-20 15:39:34,323   INFO  
cfg.MODEL = edict()
2022-09-20 15:39:34,323   INFO  cfg.MODEL.NAME: IASSD
2022-09-20 15:39:34,323   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2022-09-20 15:39:34,323   INFO  cfg.MODEL.BACKBONE_3D.NAME: IASSD_Backbone
2022-09-20 15:39:34,324   INFO  
cfg.MODEL.BACKBONE_3D.SA_CONFIG = edict()
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.NPOINT_LIST: [[4096], [1024], [512], [256], [-1], [256]]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.SAMPLE_RANGE_LIST: [[-1], [-1], [-1], [-1], [-1], [-1]]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.SAMPLE_METHOD_LIST: [['D-FPS'], ['D-FPS'], ['ctr_aware'], ['ctr_aware'], [], []]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.RADIUS_LIST: [[0.2, 0.8], [0.8, 1.6], [1.6, 4.8], [], [], [4.8, 6.4]]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.NSAMPLE_LIST: [[16, 32], [16, 32], [16, 32], [], [], [16, 32]]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.MLPS: [[[16, 16, 32], [32, 32, 64]], [[64, 64, 128], [64, 96, 128]], [[128, 128, 256], [128, 256, 256]], [], [128], [[256, 256, 512], [256, 512, 1024]]]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.LAYER_TYPE: ['SA_Layer', 'SA_Layer', 'SA_Layer', 'SA_Layer', 'Vote_Layer', 'SA_Layer']
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.DILATED_GROUP: [False, False, False, False, False, False]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.AGGREGATION_MLPS: [[64], [128], [256], [256], [], [512]]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.CONFIDENCE_MLPS: [[], [128], [256], [], [], []]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.LAYER_INPUT: [0, 1, 2, 3, 4, 3]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.CTR_INDEX: [-1, -1, -1, -1, -1, 5]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.BACKBONE_3D.SA_CONFIG.MAX_TRANSLATE_RANGE: [3.0, 3.0, 2.0]
2022-09-20 15:39:34,324   INFO  
cfg.MODEL.POINT_HEAD = edict()
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.NAME: IASSD_Head
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.CLS_FC: [256, 256]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.REG_FC: [256, 256]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.CLASS_AGNOSTIC: False
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.USE_POINT_FEATURES_BEFORE_FUSION: False
2022-09-20 15:39:34,324   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG = edict()
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.INS_AWARE_ASSIGN: True
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.GT_EXTRA_WIDTH: [0.2, 0.2, 0.2]
2022-09-20 15:39:34,324   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG.ASSIGN_METHOD = edict()
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.ASSIGN_METHOD.NAME: extend_gt
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.ASSIGN_METHOD.ASSIGN_TYPE: centers_origin
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.ASSIGN_METHOD.EXTRA_WIDTH: [1.0, 1.0, 1.0]
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.ASSIGN_METHOD.FG_PC_IGNORE: False
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER: PointResidual_BinOri_Coder
2022-09-20 15:39:34,324   INFO  
cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG = edict()
2022-09-20 15:39:34,324   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.angle_bin_num: 12
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.use_mean_size: True
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.TARGET_CONFIG.BOX_CODER_CONFIG.mean_size: [[3.9, 1.6, 1.56], [0.8, 0.6, 1.73], [1.76, 0.6, 1.73]]
2022-09-20 15:39:34,325   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG = edict()
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_CLS: WeightedCrossEntropy
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_REG: WeightedSmoothL1Loss
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_INS: WeightedCrossEntropy
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.SAMPLE_METHOD_LIST: [['D-FPS'], ['D-FPS'], ['ctr_aware'], ['ctr_aware'], [], []]
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_VOTE_TYPE: none
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.CORNER_LOSS_REGULARIZATION: True
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.CENTERNESS_REGULARIZATION: True
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.CENTERNESS_REGULARIZATION_SA: True
2022-09-20 15:39:34,325   INFO  
cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.ins_aware_weight: [0, 1.0, 1.0]
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.vote_weight: 1.0
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_cls_weight: 1.0
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.point_box_weight: 1.0
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.corner_weight: 1.0
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POINT_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2022-09-20 15:39:34,325   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.RECALL_MODE: normal
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2022-09-20 15:39:34,325   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2022-09-20 15:39:34,325   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2022-09-20 15:39:34,325   INFO  
cfg.OPTIMIZATION = edict()
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 8
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.LR: 0.01
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2022-09-20 15:39:34,326   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2022-09-20 15:39:34,326   INFO  cfg.TAG: IA-SSD
2022-09-20 15:39:34,326   INFO  cfg.EXP_GROUP_PATH: kitti_models
2022-09-20 15:39:34,438   INFO  Database filter by min points Car: 14357 => 13532
2022-09-20 15:39:34,438   INFO  Database filter by min points Pedestrian: 2207 => 2168
2022-09-20 15:39:34,438   INFO  Database filter by min points Cyclist: 734 => 705
2022-09-20 15:39:34,460   INFO  Database filter by difficulty Car: 13532 => 10759
2022-09-20 15:39:34,463   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2022-09-20 15:39:34,464   INFO  Database filter by difficulty Cyclist: 705 => 581
2022-09-20 15:39:34,473   INFO  Loading KITTI dataset
2022-09-20 15:39:34,565   INFO  Total samples for KITTI dataset: 3712
2022-09-20 15:39:40,559   INFO  IASSD(
  (vfe): None
  (backbone_3d): IASSD_Backbone(
    (SA_modules): ModuleList(
      (0): PointnetSAModuleMSG_WithSampling(
        (groupers): ModuleList(
          (0): QueryAndGroup()
          (1): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(4, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(16, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(4, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(32, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
        (aggregation_layer): Sequential(
          (0): Conv1d(96, 64, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (1): PointnetSAModuleMSG_WithSampling(
        (groupers): ModuleList(
          (0): QueryAndGroup()
          (1): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(67, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(64, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(96, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
        (aggregation_layer): Sequential(
          (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (confidence_layers): Sequential(
          (0): Conv1d(128, 128, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv1d(128, 3, kernel_size=(1,), stride=(1,))
        )
      )
      (2): PointnetSAModuleMSG_WithSampling(
        (groupers): ModuleList(
          (0): QueryAndGroup()
          (1): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(128, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(131, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
        (aggregation_layer): Sequential(
          (0): Conv1d(512, 256, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (confidence_layers): Sequential(
          (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
          (3): Conv1d(256, 3, kernel_size=(1,), stride=(1,))
        )
      )
      (3): PointnetSAModuleMSG_WithSampling(
        (groupers): ModuleList()
        (mlps): ModuleList()
      )
      (4): Vote_layer(
        (mlp_modules): Sequential(
          (0): Conv1d(256, 128, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (ctr_reg): Conv1d(128, 3, kernel_size=(1,), stride=(1,))
      )
      (5): PointnetSAModuleMSG_WithSampling(
        (groupers): ModuleList(
          (0): QueryAndGroup()
          (1): QueryAndGroup()
        )
        (mlps): ModuleList(
          (0): Sequential(
            (0): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
          (1): Sequential(
            (0): Conv2d(259, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU()
            (3): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (4): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (5): ReLU()
            (6): Conv2d(512, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (7): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (8): ReLU()
          )
        )
        (aggregation_layer): Sequential(
          (0): Conv1d(1536, 512, kernel_size=(1,), stride=(1,), bias=False)
          (1): BatchNorm1d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
  )
  (map_to_bev_module): None
  (pfe): None
  (backbone_2d): None
  (dense_head): None
  (point_head): IASSD_Head(
    (cls_loss_func): WeightedClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (ins_loss_func): WeightedClassificationLoss()
    (cls_center_layers): Sequential(
      (0): Linear(in_features=512, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Linear(in_features=256, out_features=256, bias=False)
      (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Linear(in_features=256, out_features=3, bias=True)
    )
    (box_center_layers): Sequential(
      (0): Linear(in_features=512, out_features=256, bias=False)
      (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Linear(in_features=256, out_features=256, bias=False)
      (4): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Linear(in_features=256, out_features=30, bias=True)
    )
  )
  (roi_head): None
)
2022-09-20 15:39:40,561   INFO  **********************Start training kitti_models/IA-SSD(default)**********************
